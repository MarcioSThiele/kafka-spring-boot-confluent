server.port = 8080

#kafka producer
spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url = http://localhost:8081

producer.topic.name = topic-messages

#kafka consumer
#spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id = app-group
spring.kafka.consumer.auto-offset-reset = latest
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url = http://localhost:8081
specific.avro.reader=true

#schema registry
#schema.registry.url = http://localhost:8081
#key.serializer = org.apache.kafka.common.serialization.StringSerializer
#value.serializer = io.confluent.kafka.serializers.KafkaAvroSerializer
#key.deserializer = org.apache.kafka.common.serialization.StringSerializer
#value.deserializer = io.confluent.kafka.serializers.KafkaAvroSerializer

#key.converter=org.apache.kafka.common.serialization.StringSerializer
#key.converter.schema.registry.url=http://localhost:8081
#value.converter=io.confluent.kafka.serializers.KafkaAvroSerializer
#value.converter.schema.registry.url=http://localhost:8081

